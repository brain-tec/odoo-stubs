from typing import Any

from . import preprocess
from .interface import report_rml

_logger: Any
rml_parents: Any
rml_tag: str
sxw_parents: Any
html_parents: Any
sxw_tag: str
rml2sxw: Any

def get_date_length(date_format=...): ...

class rml_parse:
    cr: Any
    uid: Any
    localcontext: Any
    name: Any
    _node: Any
    parents: Any
    tag: Any
    _lang_cache: Any
    lang_dict: Any
    default_lang: Any
    lang_dict_called: bool
    _transl_regex: Any
    def __init__(
        self, cr, uid, name, parents=..., tag=..., context: Any | None = ...
    ) -> None: ...
    def setTag(self, oldtag, newtag, attrs: Any | None = ...): ...
    def _ellipsis(self, char, size: int = ..., truncation_str: str = ...): ...
    rml_header: Any
    rml_header2: Any
    rml_header3: Any
    logo: Any
    def setCompany(self, company_id) -> None: ...
    def _strip_name(self, name, maxlen: int = ...): ...
    def format(self, text, oldtag: Any | None = ...): ...
    def removeParentNode(self, tag: Any | None = ...) -> None: ...
    def set_html_image(
        self,
        id,
        model: Any | None = ...,
        field: Any | None = ...,
        context: Any | None = ...,
    ): ...
    objects: Any
    def setLang(self, lang) -> None: ...
    def _get_lang_dict(self): ...
    def digits_fmt(
        self, obj: Any | None = ..., f: Any | None = ..., dp: Any | None = ...
    ): ...
    def get_digits(
        self, obj: Any | None = ..., f: Any | None = ..., dp: Any | None = ...
    ): ...
    def formatLang(
        self,
        value,
        digits: Any | None = ...,
        date: bool = ...,
        date_time: bool = ...,
        grouping: bool = ...,
        monetary: bool = ...,
        dp: bool = ...,
        currency_obj: bool = ...,
    ): ...
    def display_address(self, address_record, without_company: bool = ...): ...
    def repeatIn(self, lst, name, nodes_parent: bool = ...): ...
    def _translate(self, text): ...
    def _add_header(self, rml_dom, header: str = ...): ...
    datas: Any
    ids: Any
    def set_context(
        self, objects, data, ids, report_type: Any | None = ...
    ) -> None: ...

class report_sxw(report_rml, preprocess.report):
    name: Any
    parser: Any
    header: Any
    store: Any
    internal_header: bool
    def __init__(
        self,
        name,
        table,
        rml: bool = ...,
        parser=...,
        header: str = ...,
        store: bool = ...,
        register: bool = ...,
    ) -> None: ...
    def getObjects(self, cr, uid, ids, context): ...
    def create(self, cr, uid, ids, data, context: Any | None = ...): ...
    def create_source_odt(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_source_html2html(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_source_mako2html(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_source_pdf(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_single_pdf(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_single_odt(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_single_html2html(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
    def create_single_mako2html(
        self, cr, uid, ids, data, report_xml, context: Any | None = ...
    ): ...
