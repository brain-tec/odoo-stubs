from typing import Any

class YamlTag:
    def __init__(self, **kwargs) -> None: ...
    def __getitem__(self, key): ...
    def __getattr__(self, attr) -> None: ...
    def __repr__(self): ...

class Assert(YamlTag):
    model: Any
    id: Any
    severity: Any
    string: Any
    def __init__(
        self, model, id: Any | None = ..., severity=..., string: str = ..., **kwargs
    ) -> None: ...

class Record(YamlTag):
    model: Any
    id: Any
    view: Any
    def __init__(
        self, model, id, use: str = ..., view: bool = ..., **kwargs
    ) -> None: ...
    def __str__(self): ...

class Python(YamlTag):
    model: Any
    severity: Any
    name: Any
    def __init__(self, model, severity=..., name: str = ..., **kwargs) -> None: ...
    def __str__(self): ...

class Menuitem(YamlTag):
    id: Any
    name: Any
    def __init__(self, id, name, **kwargs) -> None: ...

class Workflow(YamlTag):
    model: Any
    action: Any
    ref: Any
    def __init__(self, model, action, ref: Any | None = ..., **kwargs) -> None: ...
    def __str__(self): ...

class ActWindow(YamlTag):
    def __init__(self, **kwargs) -> None: ...

class Function(YamlTag):
    model: Any
    name: Any
    def __init__(self, model, name, **kwargs) -> None: ...

class Report(YamlTag):
    model: Any
    name: Any
    string: Any
    def __init__(self, model, name, string, **kwargs) -> None: ...

class Delete(YamlTag):
    def __init__(self, **kwargs) -> None: ...

class Context(YamlTag):
    def __init__(self, **kwargs) -> None: ...

class Url(YamlTag):
    def __init__(self, **kwargs) -> None: ...

class Eval(YamlTag):
    expression: Any
    def __init__(self, expression) -> None: ...
    def __str__(self): ...

class Ref(YamlTag):
    expr: Any
    def __init__(self, expr: str = ..., *args, **kwargs) -> None: ...
    def __str__(self): ...

class IrSet(YamlTag):
    def __init__(self) -> None: ...

def assert_constructor(loader, node): ...
def record_constructor(loader, node): ...
def python_constructor(loader, node): ...
def menuitem_constructor(loader, node): ...
def workflow_constructor(loader, node): ...
def act_window_constructor(loader, node): ...
def function_constructor(loader, node): ...
def report_constructor(loader, node): ...
def delete_constructor(loader, node): ...
def context_constructor(loader, node): ...
def url_constructor(loader, node): ...
def eval_constructor(loader, node): ...
def ref_constructor(loader, tag_suffix, node): ...
def ir_set_constructor(loader, node): ...
def add_constructors() -> None: ...
