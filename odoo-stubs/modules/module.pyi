from operator import itemgetter as itemgetter
from typing import Any

from odoo import SUPERUSER_ID as SUPERUSER_ID
from odoo import api as api

MANIFEST_NAMES: Any
README: Any
_logger: Any
ad_paths: Any
hooked: bool
loaded: Any

class AddonsHook:
    def find_module(self, name, path: Any | None = ...): ...
    def load_module(self, name): ...

class OdooHook:
    def find_module(self, name, path: Any | None = ...): ...
    def load_module(self, name): ...

def initialize_sys_path() -> None: ...
def get_module_path(module, downloaded: bool = ..., display_warning: bool = ...): ...
def get_module_filetree(module, dir: str = ...): ...
def get_resource_path(module, *args): ...

get_module_resource = get_resource_path

def get_resource_from_path(path): ...
def get_module_icon(module): ...
def module_manifest(path): ...
def get_module_root(path): ...
def load_information_from_description_file(module, mod_path: Any | None = ...): ...
def load_openerp_module(module_name) -> None: ...
def get_modules(): ...
def get_modules_with_version(): ...
def adapt_version(version): ...
def get_test_modules(module): ...

class TestStream:
    logger: Any
    r: Any
    def __init__(self, logger_name: str = ...) -> None: ...
    def flush(self) -> None: ...
    def write(self, s) -> None: ...

current_test: Any

def runs_at(test, hook, default): ...

runs_at_install: Any
runs_post_install: Any

def run_unit_tests(module_name, dbname, position=...): ...
def unwrap_suite(test) -> None: ...
